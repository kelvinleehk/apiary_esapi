FORMAT: 1A
HOST: https://api.electricsoulapp.com

# Electric Soul App API
Electric Soul App API is a API service for the *Electric Soul iOS App -- a SNS provider for EDM community*

# Group Authentication
Authenticate resources of *Electric Soul API*.

The authentication has the following attributes:

- fbId - Facebook ID provided by *Facebook SDK* after successfully logged in / register. For authentication use only
- token - Expirable JWT access token generated by *Electric Soul API*

## Sign in [/user/login]
### Get a token [POST]

- If user is logged in for the first time, an empty user object with an id will be created automatically associated with the facebook id.
- isAdmin status should be stored locally
- System will register the device ID for push notification at the same time

+ Request (application/json)

        { "access_token": "YMPnWPmGQI1Oz2xHkmsdLzAn2b0tT5tDoiJ8msTg",
        "deviceId": "a22n1k2ey5rn6e9s52celpa5ygu2upa686uh3tcu" }

+ Response 200 (application/json)

        {
            accessToken: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk",
            isAdmin: true,
            userId: "cdb4156d2"
        }

## Sign out [/user/logout]
- Expire token immediate and unregister device from push notification. Device ID will be extracted from x-access-token
- It also unregister device ID for notification

### Sign out [POST]

+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"
        
+ Response 204



# Group Users
Users related resources of **Electric Soul API*.

## User [/user/{userId}]
+ Parameter

    + userId (required, number, `cdb4156d2`) ... ObjectId `userId` of any user's id.
    
### Get a user profile [GET]

+ Request (application/json)

    + Header
    
            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"


+ Response 200 (application/json)

            {
                image: "http://electricsoulapp.com/images/iphone.png",
                about: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.",
                name: "John Doe",
                email: "john.doe@example.com",
                event: [
                    going: [
                        {eventId: "cdb4156d2"},
                        {eventId: "cdb4156d2"}
                    ],
                    attended: [
                        {eventId: "cdb4156d2"},
                        {eventId: "cdb4156d2"}
                    }
                ],
                connections: {
                    followers: [
                        {userId: "cdb4156d2"},
                        {userId: "cdb4156d2"},
                    ],
                    followings: [
                        {userId: "cdb4156d2"},
                        {userId: "cdb4156d2"},
                    ],
                    plurs: [
                        {userId: "cdb4156d2"},
                        {userId: "cdb4156d2"},
                    ]
                }
            }
            

        

## User Image [/user/image]

### Upload / update user profile image [POST]

Client needs to check if the user = self

+ Request (application/json)

    + Header
    
            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"
            
    + Body
        
            { 
                image: BLOB
            }
            
+ Response 200 (application/json)

        { success: true }
    


## Follow User [/user/{userId}/follow]
+ Parameter

    + userId (required, number, `cdb4156d2`) ... ObjectId `userId` of any user's id.
    
### Follow a user [PUT]
+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ Response 204

## UnFollow User [/user/{userId}/unfollow]
+ Parameter

    + userId (required, number, `cdb4156d2`) ... ObjectId `userId` of any user's id.
    
### Unfollow / unplur a user [PUT]
+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ Response 204

## Facebook friends [/user/facebook]
### Find friends on Facebook [POST]

Users who are "friends" on Facebook and using the app

- fbId - A list of Facebook IDs from the current logged in user's facebook friends

+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

    + Body
        
            {
                [
                    { fbId: 1032326715 },
                    { fbId: 1032326715 },
                    { fbId: 1032326715 },
                    { fbId: 1032326715 }
                ],
                total: 4
            }
            
+ Response 200 (application/json)
            
        {
            followers: {
                [{
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png"
                }],
                "total": 1
            },
            followings: {
                [{
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png"
                }],
                "total": 1
            },
            plurs: {
                [{
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png"
                }],
                "total": 1
            },
            others: {
                [{
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png"
                }],
                "total": 1
            }
        }

## Is admin [/user/is_admin]
    
### Check is admin [GET]

+ Request (applicaton/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"
            
+ Response 200 (application/json)

        { isAdmin: true }

## Users [/users]
### Create / update a user profile [POST]

Except profile image

+ Request (application/json)

    + Header
    
            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"
    
    + Body
        
            {
                about: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.",
                name: "John Doe",
                email: "john.doe@example.com",
            }

+ Response 200 (application/json)

        { success: true }


## Query Users Collection [/users{?q,page}]
### Get a list of users by keyword [GET]

"status" -- status with a particular user

- 1: Following
- 2: Follower
- 3: PLURed
- 4: none

Each page iteration should return 20 results

+ Parameter

    + q (optional, string) ... search string of user name or email address
    + page (optional, integer) ... page number

+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ Response 200 (application/json)
            
        {
            "users": [
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 1
                },
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 2
                },
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 3
                },
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 4
                }
            ],
            "total": 4,
            "page": 1
        }


## Query Follower Collection [/users/follower{?q,page}]
### Get a list of followers by keyword [GET]

Each page iteration should return 20 results

+ Parameter

    + q (optional, string) ... search string of user name or email address
    + page (optional, integer) ... page number

+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ Response 200 (application/json)
            
        {
            "users": [
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 1
                },
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 1
                },
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 1
                },
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 1
                }
            ],
            "total": 4,
            "page": 1
        }

## Query Following Collection [/users/following{?q,page}]
### Get a list of users currently following by keyword [GET]

Each page iteration should return 20 results

+ Parameter

    + q (optional, string) ... search string of user name or email address
    + page (optional, integer) ... page number

+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ Response 200 (application/json)
            
        {
            "users": [
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 1
                },
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 1
                },
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 1
                },
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 1
                }
            ],
            "total": 4,
            "page": 1
        }

## Query PLUR Collection [/users/plur{?q,page}]
### Get a list of PLURed users by keyword [GET]

Each page iteration should return 20 results

+ Parameter

    + q (optional, string) ... Query parameter of user name
    + page (optional, integer) ... Query parameter of page number

+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ Response 200 (application/json)
            
        {
            "users": [
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 1
                },
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 1
                },
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 1
                },
                {
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png",
                    status: 1
                }
            ],
            "total": 4,
            "page": 1
        }


# Group Events
Events related resources of **Electric Soul API*.


## Attending Event Collection [/events/attending{?q,userId,page}]
### Get a list of attending events [GET]

+ Parameter

    + q (optional, string) ... query string.
    + userId (optional, string) ... user ID. If not specified current logged-in user id will be used
    + page (optional, integer) ... page number

+ Request (applicaton/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ Response 200 (application/json)

        {
            [{
                eventId: "a1b491d0",
                title: "DITCH Thursday w/ Bassjackers",
                timedate: "2011-05-26T07:56:00.123Z",
                location: "1600 Amphitheatre Pkwy, Mountain View, CA",
                goingCount: 2,
                friendCount: 2,
                heroImage: "http://electricsoulapp.com/images/iphone.png"
            },
            {
                eventId: "a1b491d0",
                title: "DITCH Thursday w/ Bassjackers",
                timedate: "2011-05-26T07:56:00.123Z",
                location: "1600 Amphitheatre Pkwy, Mountain View, CA",
                goingCount: 2,
                friendCount: 2,
                heroImage: "http://electricsoulapp.com/images/iphone.png"
            }]
            total: 2,
            page: 1
        }

## Attended Event Collection [/events/attended{?q,userId,page}]
### Get a list of attended events [GET]

+ Parameter

    + q (optional, string) ... query string.
    + userId (optional, string) ... user ID. If not specified current logged-in user id will be used
    + page (optional, integer) ... page number
    
+ Request (applicaton/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ Response 200 (application/json)

         {
            [{
                eventId: "a1b491d0",
                title: "DITCH Thursday w/ Bassjackers",
                timedate: "2011-05-26T07:56:00.123Z",
                location: "1600 Amphitheatre Pkwy, Mountain View, CA",
                goingCount: 2,
                friendCount: 2,
                heroImage: "http://electricsoulapp.com/images/iphone.png"
            },
            {
                eventId: "a1b491d0",
                title: "DITCH Thursday w/ Bassjackers",
                timedate: "2011-05-26T07:56:00.123Z",
                location: "1600 Amphitheatre Pkwy, Mountain View, CA",
                goingCount: 2,
                friendCount: 2,
                heroImage: "http://electricsoulapp.com/images/iphone.png"
            }]
            total: 2,
            page: 1
        }
        
## Upcoming Event Collection [/events/upcoming{?q,userId,page}]
### Get a list of upcoming events [GET]

+ Parameter

    + q (optional, string) ... query string.
    + userId (optional, string) ... user ID. If not specified current logged-in user id will be used
    + page (optional, integer) ... page number
    
+ Request (applicaton/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ Response 200 (application/json)

        {
            [{
                eventId: "a1b491d0",
                title: "DITCH Thursday w/ Bassjackers",
                timedate: "2011-05-26T07:56:00.123Z",
                location: "1600 Amphitheatre Pkwy, Mountain View, CA",
                goingCount: 2,
                friendCount: 2,
                heroImage: "http://electricsoulapp.com/images/iphone.png"
            },
            {
                eventId: "a1b491d0",
                title: "DITCH Thursday w/ Bassjackers",
                timedate: "2011-05-26T07:56:00.123Z",
                location: "1600 Amphitheatre Pkwy, Mountain View, CA",
                goingCount: 2,
                friendCount: 2,
                heroImage: "http://electricsoulapp.com/images/iphone.png"
            }]
            total: 2,
            page: 1
        }

## Events [/events]
### Create an event [PUT]
+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

    + Body
 
            {
                title: "DITCH Thursday w/ Bassjackers",
                description: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor.",
                heroImage: BLOB,
                startTimeDate: "2011-05-26T07:56:00.123Z",
                endTimeDate: "2011-05-26T07:56:00.123Z", 
                location: "1600 Amphitheatre Pkwy, Mountain View, CA",
                genre: "Ambient dub, Ambient industrial",
                ticketUrl: "http://www.ticketmaster.com.mx/event/14004D1687C44C32"
            }
            
+ response 200 (application/json)

        { success: true }



## Event [/event/{eventId}]

+ Parameter

    + eventId (required, number, `a1b491d0`) ... ObjectId `eventId` of the Note to perform action with. Has example value.
        

### Get an event detail [GET]
+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

            
+ Response 200 (application/json)

                {
                    title: "DITCH Thursday w/ Bassjackers",
                    description: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor.",
                    heroImage: "http://electricsoulapp.com/images/iphone.png",
                    startTimeDate: "2011-05-26T07:56:00.123Z",
                    endTimeDate: "2011-05-26T07:56:00.123Z", 
                    location: "1600 Amphitheatre Pkwy, Mountain View, CA",
                    genre: "Ambient dub, Ambient industrial",
                    ticketUrl: "http://www.ticketmaster.com.mx/event/14004D1687C44C32"
                    goingCount: 2,
                    friendCount: 2
                }
            
### Update an event detail [POST]

Client should check if current user is Admin.

+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"
            
    + Body
    
                {
                    eventId: "a1b491d0",
                    title: "DITCH Thursday w/ Bassjackers",
                    description: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor.",
                    heroImage: BLOB,
                    startTimeDate: "2011-05-26T07:56:00.123Z",
                    endTimeDate: "2011-05-26T07:56:00.123Z", 
                    location: "1600 Amphitheatre Pkwy, Mountain View, CA",
                    genre: "Ambient dub, Ambient industrial",
                    ticketUrl: "http://www.ticketmaster.com.mx/event/14004D1687C44C32"
                }
                
+ Response 200 (application/json)

        { success: true }



## Event Attendents [/event/{eventId}/goings]

+ Parameter

    + eventId (required, number, `a1b491d0`) ... ObjectId `eventId` of the Note to perform action with. Has example value.
    
### Get a list of attendents [GET]

+ Request (application/json)    

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"
            
+ Response 200 (application/json)

        {
            followers: {
                [{
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png"
                }],
                "total": 1
            },
            followings: {
                [{
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png"
                }],
                "total": 1
            },
            plurs: {
                [{
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png"
                }],
                "total": 1
            },
            others: {
                [{
                    userId: "cdb4156d2",
                    name: "John Doe",
                    image: "http://electricsoulapp.com/images/iphone.png"
                }],
                "total": 1
            }
        }
        
## Attend Event [/event/{eventId}/attend]

+ Parameter

    + eventId (required, number, `a1b491d0`) ... ObjectId `eventId` of the Note to perform action with. Has example value.
    
### "Attend" an event [PUT]
+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ response 204

## Attend Event [/event/{eventId}/unattend]

+ Parameter

    + eventId (required, number, `a1b491d0`) ... ObjectId `eventId` of the Note to perform action with. Has example value.
    
### "Unattend" an event [PUT]

+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ response 204


## Delete Event [/event/{eventId}/delete]

+ Parameter

    + eventId (required, number, `a1b491d0`) ... ObjectId `eventId` of the Note to perform action with. Has example value.
    
### Delete an event [PUT]

+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ response 204

# Group Messages

## Get Messages [/messages]

### Get all messages sent to the current [GET]

+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ Response 200 (application/json)

        [
            { 
                "messageId": "543d01fc15bf5cef27000001",
                "message": "Hello!",
                "datetime": "2014-12-26T07:56:00.123Z",
                "fromUserId": "543561fc15bf5cef27000001"
            },
            { 
                "messageId": "543d01fc15bf5cef27000001",
                "message": "What are you doing?",
                "datetime": "2014-12-26T07:59:00.123Z",
                "fromUserId": "543561fc15bf5cef27000001"
            }
        ]

## Get Messages From User [/messages/:userId]

### Get all messages sent to the current user from a certain user [GET]

+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ Response 200 (application/json)

        [
            { 
                "messageId": "543d01fc15bf5cef27000001",
                "message": "Hello!",
                "datetime": "2014-12-26T07:56:00.123Z",
                "fromUserId": "543561fc15bf5cef27000001"
            },
            { 
                "messageId": "543d01fc15bf5cef27000001",
                "message": "What are you doing?",
                "datetime": "2014-12-26T07:59:00.123Z",
                "fromUserId": "543561fc15bf5cef27000001"
            }
        ]

## Get Message Count [/message/count]

### Get the number of messages sent to the current user [GET]

+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

+ Response 200 (application/json)

        8

# Group Settings 

## Notifications [/settings/notification]

### Turn on / off notifications [PUT]

+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

    + Body

            { 
                receiveNewEventNotifcation: true,
                receiveNewPLURNotifcation: true,
                receiveNewFollowerNotification: true,
                receiveNewMessageNotification: true
            }
    
+ response 204

### Get notification settings [GET]

+ response 200 (application/json)

        { 
            receiveNewEventNotifcation: true,
            receiveNewPLURNotifcation: true,
            receiveNewFollowerNotification: true,
            receiveNewMessageNotification: true
        }

## Report bugs [/settings/report]

When new report is received, system should fire a notification email to admin@electricsoulapp.com with user info (i.e. name and email address) and the message body.

### Submit bug report [PUT]



+ Request (application/json)

    + Header

            x-access-token: "eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFtcGxlLmNvbS9pc19yb290Ijp0cnVlfQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk"

    + Body

            { 
                message: "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua."
            }
    
+ response 204